"use strict";(self.webpackChunkresourge_schema=self.webpackChunkresourge_schema||[]).push([[7106],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),u=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=u(e.components);return a.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=u(t),g=r,d=c["".concat(o,".").concat(g)]||c[g]||p[g]||s;return t?a.createElement(d,i(i({ref:n},m),{},{components:t})):a.createElement(d,i({ref:n},m))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=c;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<s;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},7070:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=t(7462),r=(t(7294),t(3905));const s={sidebar_position:4},i=void 0,l={unversionedId:"api/String",id:"api/String",title:"String",description:"Example",source:"@site/docs/api/String.md",sourceDirName:"api",slug:"/api/String",permalink:"/docs/api/String",draft:!1,editUrl:"https://github.com/resourge/schema/docs/api/String.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Object",permalink:"/docs/api/Object"},next:{title:"Date",permalink:"/docs/api/Date"}},o={},u=[{value:"Example",id:"example",level:2},{value:"Options",id:"options",level:2},{value:"required",id:"required",level:3},{value:"min",id:"min",level:3},{value:"max",id:"max",level:3},{value:"between",id:"between",level:3},{value:"length",id:"length",level:3},{value:"equals",id:"equals",level:3},{value:"pattern",id:"pattern",level:3},{value:"empty",id:"empty",level:3},{value:"contains",id:"contains",level:3},{value:"numeric",id:"numeric",level:3},{value:"alpha",id:"alpha",level:3},{value:"alphanum",id:"alphanum",level:3},{value:"alphadash",id:"alphadash",level:3},{value:"hex",id:"hex",level:3},{value:"base64",id:"base64",level:3},{value:"uuid",id:"uuid",level:3},{value:"url",id:"url",level:3},{value:"cuid",id:"cuid",level:3},{value:"email",id:"email",level:3},{value:"postalCode",id:"postalcode",level:3},{value:"phoneNumbers",id:"phonenumbers",level:3},{value:"enum",id:"enum",level:3},{value:"Contribution",id:"contribution",level:2}],m={toc:u};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { string } from '@resourge/schema';\n\nstring()\n// or\nstring('Custom error message')\n")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("h3",{id:"required"},"required"),(0,r.kt)("p",null,"Checks if string is not null/undefined/empty string. (Basically the default ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/Rules#mandatory-rules"},"MANDATORY_RULES")," plus empty string)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().required()\n// with custom message\nstring().required('Custom error message')\n")),(0,r.kt)("h3",{id:"min"},"min"),(0,r.kt)("p",null,"Checks if string has a size bigger than minValue."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().min(1)\n// with custom message\nstring().min(1, 'Custom error message')\n")),(0,r.kt)("h3",{id:"max"},"max"),(0,r.kt)("p",null,"Checks if string has a size smaller than maxValue."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"\nstring().max(10)\n// with custom message\nstring().max(10, 'Custom error message')\n")),(0,r.kt)("h3",{id:"between"},"between"),(0,r.kt)("p",null,"Checks if string is between minValue and maxValue."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().between(1, 10)\n// with custom message\nstring().between(1, 10, 'Custom error message')\n")),(0,r.kt)("h3",{id:"length"},"length"),(0,r.kt)("p",null,"Checks if string has length number of characters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().length(10)\n// with custom message\nstring().length(10, 'Custom error message')\n")),(0,r.kt)("h3",{id:"equals"},"equals"),(0,r.kt)("p",null,"Checks if string equal to value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().equals('name')\n// with custom message\nstring().equals('name', 'Custom error message')\n\n// or for multiple values\nstring().equals(['name', 'id']) // Checks if string is 1 or 10\n// with custom message\nstring().equals(['name', 'id'], 'Custom error message')\n")),(0,r.kt)("h3",{id:"pattern"},"pattern"),(0,r.kt)("p",null,"Matches regular expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().pattern(/\\d{4}([-]\\d{3})?/)\n// with custom message\nstring().pattern(/\\d{4}([-]\\d{3})?/, 'Custom error message')\n")),(0,r.kt)("h3",{id:"empty"},"empty"),(0,r.kt)("p",null,"Checks if string is empty."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().empty()\n// with custom message\nstring().empty('Custom error message')\n")),(0,r.kt)("h3",{id:"contains"},"contains"),(0,r.kt)("p",null,"Checks if string contains value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().contains('name')\n// with custom message\nstring().contains('name', 'Custom error message')\n")),(0,r.kt)("h3",{id:"numeric"},"numeric"),(0,r.kt)("p",null,"Checks if string contains only numeric characters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().numeric()\n// with custom message\nstring().numeric('Custom error message')\n")),(0,r.kt)("h3",{id:"alpha"},"alpha"),(0,r.kt)("p",null,"Checks if string contains only alpha characters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().alpha()\n// with custom message\nstring().alpha('Custom error message')\n")),(0,r.kt)("h3",{id:"alphanum"},"alphanum"),(0,r.kt)("p",null,"Checks if string contains only alpha-numeric characters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().alphanum()\n// with custom message\nstring().alphanum('Custom error message')\n")),(0,r.kt)("h3",{id:"alphadash"},"alphadash"),(0,r.kt)("p",null,"Checks if string contains only contains alpha-numeric characters, as well as dashes and underscores."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().alphadash()\n// with custom message\nstring().alphadash('Custom error message')\n")),(0,r.kt)("h3",{id:"hex"},"hex"),(0,r.kt)("p",null,"Checks if string is hexadecimal."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().hex()\n// with custom message\nstring().hex('Custom error message')\n")),(0,r.kt)("h3",{id:"base64"},"base64"),(0,r.kt)("p",null,"Checks if string is hexadecimal."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().hex()\n// with custom message\nstring().hex('Custom error message')\n")),(0,r.kt)("h3",{id:"uuid"},"uuid"),(0,r.kt)("p",null,"Checks if string is format uuid."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().uuid()\n// with custom message\nstring().uuid('Custom error message')\n")),(0,r.kt)("h3",{id:"url"},"url"),(0,r.kt)("p",null,"Checks if string is URL accepted."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().url()\n// with custom message\nstring().url('Custom error message')\n")),(0,r.kt)("h3",{id:"cuid"},"cuid"),(0,r.kt)("p",null,"Checks if string is format cuid."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().cuid()\n// with custom message\nstring().cuid('Custom error message')\n")),(0,r.kt)("h3",{id:"email"},"email"),(0,r.kt)("p",null,"Checks if is a valid email."),(0,r.kt)("p",null,"@mode"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"basic -> Validation of basic email template."),(0,r.kt)("li",{parentName:"ul"},"precise -> Validation of a more restricted email template.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"string().email()\n// or\nstring().email('basic', 'Custom error message') // 'basic' | 'precise'\n// with custom message\nstring().email('Custom error message')\n")),(0,r.kt)("h3",{id:"postalcode"},"postalCode"),(0,r.kt)("p",null,"Checks if is a valid postalCode.\nPostal Codes regex validations are included."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { PostalCodes } from '@resourge/schemas/postalCodes';\n\nobject({\n  country: string(),\n  postalCode: string().postalCode(PostalCodes.PT\n})\n// with custom message\nobject({\n  country: string(),\n  postalCode: string().postalCode(PostalCodes.PT, 'Custom error message'))\n})\n// or\nobject({\n  country: string(),\n  postalCode: string().postalCode(\n    (_, form) => {\n      if(form.country === 'Espanha') {\n        return PostalCodes.ES\n      }\n      return PostalCodes.PT\n    }\n  )\n})\n// with custom message\nobject({\n  country: string(),\n  postalCode: string().postalCode(\n    (_, form) => {\n      if(form.country === 'Espanha') {\n        return PostalCodes.ES\n      }\n      return PostalCodes.PT\n    }, \n    'Custom error message'\n  )\n})\n")),(0,r.kt)("h3",{id:"phonenumbers"},"phoneNumbers"),(0,r.kt)("p",null,"Checks if is a valid phoneNumber.\nPhone Number regex validations are included for every country."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { phoneNumbers } from '@resourge/schemas/phoneNumbers';\n\nobject({\n  phoneNumber: string().phoneNumber(PhoneNumbers.pt_PT).required()\n// with custom message\nobject({\n  phoneNumber: string().phoneNumber(PhoneNumbers.pt_PT) 'Custom error message'))\n})\n// or\nobject({\n  phoneNumber: string().phoneNumber(\n    (_, form) => {\n      if(form.country === 'Spain') {\n        return PhoneNumbers.es_ES\n      }\n      return PhoneNumbers.pt_PT\n    }\n  )\n})\n// with custom message\nobject({\n  country: string(),\n  postalCode: string().postalCode(\n    (_, form) => {\n      if(form.country === 'Spain') {\n        return PhoneNumbers.es_ES\n      }\n      return PhoneNumbers.pt_PT\n    }, \n    'Custom error message'\n  )\n})\n")),(0,r.kt)("h3",{id:"enum"},"enum"),(0,r.kt)("p",null,"Checks if string is a value of enum."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"\nenum FieldTypeEnum {\n  FREE_TEXT = 'FREE_TEXT',\n  EXISTING_FIELD = 'EXISTING_FIELD',\n  SQL_EXPRESSION = 'SQL_EXPRESSION',\n  SOURCE_FIELD = 'SOURCE_FIELD'\n}\nstring().enum(FieldTypeEnum)\n// with custom message\nstring().enum(FieldTypeEnum, 'Custom error message')\n")),(0,r.kt)("h2",{id:"contribution"},"Contribution"),(0,r.kt)("p",null,"In case you have different validations that you use, please tell us so we improve the library."))}p.isMDXComponent=!0}}]);